---
layout: post
title:  DB 기초 시리즈5 - 동시성제어, DB회복관리
date:   2019-03-24
description: DB 기초 시리즈6로 sql에 대해 간단히 정리하도록 하겠습니다. 
tags: [DB, Databases, 기초, SQL, sql, DML, DDL, GROUPBY, 집계함수]
category: [DB, 면접]
---


이번시간에는 sql에 대한 간단한 정리를 해보도록 하겠습니다. 현재 준비하는게 있어서 간단히 내용만 정리하고 계속 내용을 추가하는 식으로 정리하겠습니다.

<br/>

<br/>

**DDL(Data Definition Language )** 

<br/>

DDL은 데이터 정의어입니다. 데이터의 구조를 정의하는데 사용되는 명령어들입니다. 

<br/>

- CREATE
- ALTER
- DROP
- RENAME
- TRUNCATE

<br/>

<br/>

**DML(Data Definition Language)**

<br/>

DML은 데이터 조작어입니다. 데이터베이스에 들어있는 데이터를 조작하는 명령어입니다. 

<br/>

- SELECT
- INSERT
- UPDATE
- DELETE

<br/>

<br/>

**DCL(Data Control Language)**

<br/>

DCL은 데이터 제어어로써 데이터베이스에 접근하는 권한을 제어합니다. 

<br/>

- GRANT
- REVOKE

<br/>

<br/>

**TCL(Transaction Control Language)**

<br/>

TCL은 트랜잭션 제어어로써 트랜잭션을 제어합니다. 

<br/>

- COMMIT
- ROLLBACK
- SAVEPOINT
- SET TRANSACTION

<br/>

<br/>

**DQL(Data Query Language)**

<br/>

DML에서 select는 따로 데이터 질의 언어라고도 불릴 정도로 중요한 SQL입니다. 그래서 select에 따른 내용들을 조금 더 자세히 살펴보도록 하겠습니다. 

<br/>

- WHERE 조건 

  조건에 맞는 검색을 할 때 사용합니다. 비교, 범위, 집합, 패턴, NULL, 복합조건이 들어갈 수 있습니다. 

  - 비교 (=, <, >, <=, >, >=)

    예) value < 2000

  - 범위(BETWEEN)

    예) value BETWEEN 1000 AND 3000

  - 집합(IN, NOT IN)

  - 예) value IN (1000, 2000, 3000)

  - 패턴(LIKE)

    예) name LIKE '%jeong%'

  - NULL(IS NULL, IS NOT NULL)

    예) value IS NULL

  - 복합조건(AND, OR, NOT)

    예) value > 2000 AND name LIKE '%jeong%'

<br/>

- ORDER BY

  특정 순서로 정렬하여 출력하고 싶을 때 사용합니다. 

  - 오름차순

    예) ORDER BY 컬럼명 ASC; 

  - 내림차순

    예) ORDER BY 컬럼명 DESC;

<br/>

- 집계함수와 GROUP BY, HAVING 

  어떤 정보든 데이터에 대한 집계가 필요합니다. 이를 위해서 SQL에서는 집계함수를 지원하며 집계를 하는 그룹을 GROUP BY를 통해 결정합니다.

  <br/>

  - 집계함수 
    - SUM - 조건에 맞는 모든 행을 더합니다. 
    - AVG - 조건에 맞는 모든 행의 평균을 구합니다. 
    - MIN - 조건에 맞는 행 중 가장 작은 값을 찾습니다.
    - MAX - 조건에 맞는 행 중 가장 큰 값을 찾습니다.
    - COUNT - 조건에 맞는 행들의 개수를 구합니다. 

  <br/>

  - GROUP BY

    위의 집계함수에서 "조건에 맞는"의 조건을 설정하는것이 GROUP BY입니다. GROUP BY가 없으면 "조건에 맞는"는 "모든 행"으로 치환될 수 있습니다. 즉 GROUP BY는 집계함수에 대한 조건을 설정해 주며 조건은 컬럼에서 중복된 값들을 그룹으로 묶는 것을 말합니다. 즉 "조건에 맞는" -> "GROUP BY에 설정된 컬럼의 중복된 값들을 그룹으로 묶었을 때 해당 그룹이면"이 됩니다. 

    **GROUP BY로 묶었을 때 SELECT에는 GROUPBY로 묶은 컬럼과 집계함수만 들어갈 수 있습니다. **

  <br/>

  - HAVING 

    GROUP BY의 결과로 나타나는 그룹에 대한 결과에 조건을 설정할 수 있고 조건을 만족할 때만 결과가 나타납니다. 

    **WHERE절과 HAVING절이 같이 포함되어 있다면 검색조건이 애매해질 수 있습니다. HAVING절은 ORDER BY절과 같이 작성되어야 하고 WHERE절보다 뒤에 나와야합니다. 그리고 검색조건으로는 집계함수가 와야합니다.**

<br/>

- LIMIT

  가져올 행의 수를 제한할 수 있습니다. 배열의 인덱스를 생각하셔도 좋을거 같습니다.

  - LIMIT 정수

    0(인덱스)부터 정수개의 행만 출력합니다.

  - LIMIT 정수1, 정수2

    정수1(인덱스)부터 정수2개의 행만 출력합니다. 

    예) LIMIT 1, 5

    1(인덱스) -> 즉 두 번째부터 5개를 가져옵니다.

<br/>

<br/>



기초적인 내용이더라도 실수하지 않도록 평소에 다시 복기해보는 시간을 자주 가져야할 것같습니다. 











